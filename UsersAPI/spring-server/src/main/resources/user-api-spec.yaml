swagger: "2.0"
info:
  description: "This is the documentation of the AMT Project 2"
  version: "1.0.0"
  title: "AMT - Project 2"

host: "localhost:8080"
basePath: "/api"
schemes:
  - http
tags:
  - name: "user"
    description: "Operations about user"
paths:
  /users:
    post:
      tags:
        - "user"
      description: "create a new user"
      operationId: "createUser"
      consumes:
        - "application/json"
      parameters:
        - name: "user"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "created"
          schema:
            type: "object"
    get:
      tags:
        - "user"
      description: "Get the list of all users"
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        200:
          description: "success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
  /users/{userId}:
    patch:
      tags:
        - "user"
      description: "change user password"
      operationId: "changePassword"
      consumes:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
        - name: "newPassword"
          in: "query"
          type: "string"
      responses:
        200:
          description: "updated"
    get:
      tags:
        - "user"
      description: "Get a single user"
      operationId: "getUserById"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/User"
  /login:
    post:
      tags:
        - "user"
      description: "Authenticate a user"
      operationId: "authenticateUser"
      consumes:
        - "application/x-www-form-urlencoded"
      parameters:
        - name: "username"
          in: "formData"
          required: true
          type: "string"
        - name: "password"
          in: "formData"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
    get:
      tags:
        - "user"
      description: "Get the login"
      operationId: "getLoginPage"
      produces:
        - "application/json"
      responses:
        200:
          description: "success"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstname:
        type: "string"
      lastname:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
      email:
        type: "string"
    xml:
      name: "User"